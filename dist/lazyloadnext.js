!function(e){function t(n){if(r[n])return r[n].exports;var o=r[n]={i:n,l:!1,exports:{}};return e[n].call(o.exports,o,o.exports,t),o.l=!0,o.exports}var r={};t.m=e,t.c=r,t.d=function(e,r,n){t.o(e,r)||Object.defineProperty(e,r,{configurable:!1,enumerable:!0,get:n})},t.n=function(e){var r=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(r,"a",r),r},t.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},t.p="",t(t.s=0)}([function(e,t,r){"use strict";function n(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}var o=function(){function e(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}return function(t,r,n){return r&&e(t.prototype,r),n&&e(t,n),t}}(),i=function(){function e(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"img.lazyload";n(this,e),this.selector=t,this.init()}return o(e,[{key:"init",value:function(){var e=this;document.querySelectorAll(this.selector);if("IntersectionObserver"in window)e.createObserver();else{console.log("IntersectionObserver not supported but there is polifill added to the page :)");var t=document.createElement("script");t.src="https://rawgit.com/jeremenichelli/intersection-observer-polyfill/master/intersection-observer-polyfill.js",document.head.appendChild(t),t.onload=function(){e.createObserver()}}}},{key:"createObserver",value:function(){var e=this,t=document.querySelectorAll(this.selector),r=new IntersectionObserver(function(t,r){t.forEach(function(t){t.isIntersecting&&t.target.getAttribute("data-src")&&(t.target.src=t.target.getAttribute("data-src"),t.target.removeAttribute("data-src"),t.target.classList.remove(e.selector),r.unobserve(t.target))})},{});Array.prototype.map.call(t,function(e){r.observe(e)})}}]),e}();window.LazyLoadNext=i}]);